=============조준범=============
1. Was에서 DB 연결 시 IP가 아닌 Server명으로 연결
	- Server.xml 내 Hikari JNDI 설정
	=> 25% 진행

2. 파일업로드는 BI서버 네트웍드라이브를 통한 업로드
	- Was에서 BI서버에 네트웍드라이브 설정 
	- Was frame.properties => 업로드경로, 이미지URL 설정
	=> 100% 완료

3. Apache Web 도메인 설정
	- 웹서버 도메인 바인딩은 한 IP로 여러개의 도메인 설정
	=> 진행중....
	
4. 설정파일관리
	- Local, Dev, Prod 설정파일을 따로 관리
	- jdbc.properties
	- db-config.xml
	- framework.properties
	- log4j2.xml
	=> 50%
	

=============김기범=============
1. Dev jdk/Gib Lab 설치
2. Dev Tomcat 설치
	- Okplaza(Front)
	- Okplaza(Admin)
	- OKplaza(BI)
	- WMS
	- OKSafety
	- B24Market
3.Project Git 등록
4. 젠킨스 설치 및 배포


=============김은별=============
1. Data Cleansing
	- 상품/주문
	=> 100%
	
2. 스케줄
	=> 처리중..
	
3. Dev DB Restore
	=> 처리중..
	
4. 검색엔진 개발서버 설치
	=> 김상진님에게 유선통화 : 9/27까지 구성/설치 완료한다는 연락을 받음


=============IOMS=============
1. 화요일까지 화면DB 설계
2. 수요일 리뷰




=============Apache Web와 Tomcat 연동=============
1. mod_jk 모듈 설치
	mod_jk 모듈은 아파치 웹 서버와 톰캣 서버를 연동하는 역할을 합니다. 따라서 mod_jk 모듈을 설치해야 합니다.
	- mod_jk.so 파일 다운로드: mod_jk.so 파일은 아파치 웹 서버와 톰캣 서버 간 통신을 위한 모듈 파일입니다. 인터넷에서 다운로드 받을 수 있습니다.
	- 모듈 디렉토리에 복사: mod_jk.so 파일을 아파치 웹 서버의 모듈 디렉토리에 복사합니다. 모듈 디렉토리 경로는 아파치 웹 서버의 설치 경로 아래 modules 디렉토리입니다.

2. workers.properties 파일 작성
	workers.properties 파일은 톰캣 서버와 아파치 웹 서버 간 통신을 위한 설정 파일입니다. 이 파일에서는 각각의 톰캣 서버에 대해 worker를 정의하고, worker가 접속할 IP와 포트를 설정합니다.
	- worker 정의: workers.properties 파일에서는 worker를 정의합니다. worker는 톰캣과 아파치 웹 서버 간의 연결을 담당합니다. 예를 들어, worker1, worker2 등의 이름으로 worker를 정의할 수 있습니다.
	- IP와 포트 설정: 각각의 worker에 대해 IP와 포트를 설정합니다. 이 정보는 톰캣 서버가 실행 중인 IP와 포트입니다.

3. httpd.conf 파일 수정
	httpd.conf 파일은 아파치 웹 서버의 설정 파일입니다. 
	이 파일에서 mod_jk 모듈을 로드하고, workers.properties 파일의 경로를 설정합니다. 
	그리고 가상 호스트를 정의하고, 각각의 가상 호스트에 대해 JkMount 명령을 사용하여 톰캣과 연동할 URL 패턴을 설정합니다.
	- mod_jk 모듈 로드: httpd.conf 파일에서 mod_jk 모듈을 로드합니다. LoadModule 명령을 사용하여 mod_jk 모듈을 로드합니다.
	- workers.properties 파일 경로 설정: httpd.conf 파일에서 workers.properties 파일의 경로를 설정합니다. JkWorkersFile 명령을 사용하여 workers.properties 파일의 경로를 지정합니다.
	- 가상 호스트 정의: httpd.conf 파일에서 가상 호스트를 정의합니다. VirtualHost 명령을 사용하여 가상 호스트를 정의하고, ServerName 명령을 사용하여 가상 호스트의 도메인 이름을 지정합니다.
	- JkMount 명령 사용: 각각의 가상 호스트에 대해 JkMount 명령을 사용하여 톰캣과 연동할 URL 패턴을 설정합니다. 예를 들어, /tomcat/* URL 패턴에 대해 worker1과 연동하도록 설정할 수 있습니다.

위와 같이 설정하면 아파치 웹 서버에서 여러 개의 톰캣 서버로 연동하고 도메인으로 구분하여 서비스할 수 있습니다.






=============맞춤형 도메인 제안서=============
목적
본 제안서는 고객사의 브랜드 이미지를 유지하면서, 동일한 온라인 서비스를 제공하기 위한 "맞춤형 도메인" 솔루션에 대한 제안입니다.

개요
고객사들은 동일한 온라인 서비스를 이용하더라도, 각각의 브랜드 이미지를 유지하기 위해 자체 도메인을 사용하고 있습니다. 
이러한 방식은 고객사의 브랜드 이미지를 유지하는 데는 효과적이나, 운영 및 유지보수에 있어서는 비효율적일 수 있습니다. 
이에 본 솔루션은 고객사들이 동일한 온라인 서비스를 제공하면서, 각각의 브랜드 이미지를 유지할 수 있는 방법을 제공합니다.

솔루션
본 솔루션은 "맞춤형 도메인"을 사용합니다. 
이는 각 고객사가 자체 도메인을 사용하면서도, 동일한 온라인 서비스를 이용할 수 있는 방법입니다. 
구체적으로는 다음과 같은 절차로 진행됩니다.

고객사는 자체 도메인을 등록합니다.
고객사는 해당 도메인으로 접속 시, 미리 정의된 메인 페이지를 보여주도록 설정합니다.
사용자가 로그인 시, 해당 고객사의 브랜드 이미지와 메시지를 보여줍니다.
사용자가 서비스를 이용할 때, 해당 고객사의 도메인을 사용하여 서비스에 접속합니다.
이러한 방식을 통해, 각 고객사는 자체 도메인을 사용하면서도, 동일한 온라인 서비스를 이용할 수 있습니다.

이점
본 솔루션을 이용함으로써 다음과 같은 이점을 얻을 수 있습니다.

각 고객사는 자체 도메인을 사용하여 브랜드 이미지를 유지할 수 있습니다.
운영 및 유지보수가 효율적으로 이루어집니다.
사용자는 해당 고객사의 브랜드 이미지와 메시지를 보여받으며, 보다 직관적으로 서비스를 이용할 수 있습니다.

결론
본 솔루션은 고객사들이 자체 브랜드 이미지를 유지하면서도, 동일한 온라인 서비스를 제공할 수 있는 방법을 제공합니다. 
이를 통해 각 고객사는 브랜드 이미지를 유지하는데 있어서 효과적으로 운영할 수 있으며, 사용자는 보다 직관적으로 서비스를 이용할 수 있습니다.





솔루션 구현
1. 도메인 등록
고객사는 자체 도메인을 등록합니다. 등록된 도메인은 고객사의 브랜드 이미지와 일치해야 합니다.

2. 메인 페이지 설정
고객사는 해당 도메인으로 접속 시, 미리 정의된 메인 페이지를 보여주도록 설정합니다. 이를 통해 사용자는 해당 고객사의 브랜드 이미지를 인식할 수 있습니다.

3. 로그인 페이지 설정
사용자가 로그인 시, 해당 고객사의 브랜드 이미지와 메시지를 보여줍니다. 이를 위해 로그인 페이지를 고객사의 브랜드 이미지와 일치하도록 설정합니다.

4. 서비스 제공
사용자가 서비스를 이용할 때, 해당 고객사의 브랜드 이미지와 일치하는 UI를 보여줍니다. 이를 위해 UI 컴포넌트를 고객사의 브랜드 이미지와 일치하도록 설정합니다.

5. 유지보수
본 솔루션은 고객사들이 독립적으로 운영할 수 있도록 구성되어 있습니다. 따라서, 각 고객사는 자체적으로 메인 페이지, 로그인 페이지, UI 컴포넌트 등을 관리할 수 있습니다. 또한, 본 솔루션은 안정적인 서비스 제공을 위해 필요한 유지보수 작업을 수행합니다.

비용
본 솔루션의 비용은 다음과 같이 구성됩니다.

초기 구축 비용: 도메인 등록 및 메인 페이지, 로그인 페이지, UI 컴포넌트 등 구축 비용
월간 유지보수 비용: 서비스 안정성 및 보안 유지를 위한 비용
결론
본 솔루션은 고객사들이 동일한 온라인 서비스를 제공하면서도, 각각의 브랜드 이미지를 유지할 수 있는 방법을 제공합니다. 이를 통해 고객사들은 자체 도메인을 사용하면서도, 운영 및 유지보수에 있어서 효율적이고 안정적인 서비스를 제공할 수 있습니다.



---통합대상---
1. SMS
2. RCS 
3. 선불 릴레이

분석/설계
개발



---기업메시지 통합 개발 범위---
1. SMS/XMS/RCS 중계서비스와 메시지허브 통합
	메시지허브 서비스를 유지하면서 중계서비스에 있는 기능 추가
	기존 중계서비스 고객에게 메시지허브 서비스 사용을 유도(중계 회원 자동회원 가입[계정통합])
	정산(빌링/청구)을 메시지허브로 통합
	중계서비스 모니터링
2. 메시지 허브 기능 개선
	메시지발송 기능 개선(예약발송/테스트/대체발송/주소록/변수처리/보안로그인/야간전송제한/이모티콘지원/템플릿 심사)
	메시지발송 UX/UX 개선(콘솔통합 포함)
	웹 대용량 메시지발송 지원
	웹 Front End 프레임웍 전환(컴포넌트 기반 아키텍처 React로의변경으로 코드 재사용을 통한 운영비용 절감)
3. 랜딩페이지 기획/디자인 개선과 반응형웹으로의 전환



=========이번주 작업=========
1. 기업메시지 통합 공수 산정
2. 맞춤형 도메인 제안서
3. 실적조회 쿼리 제공
4. 검색엔진 설치되는 서버의 코어 수가 as-is서버는 8개, to-be서버는 2개라서 이대로 사용하다면 cpu가 100까지 찰수 있다
	- 주간보고에 작성
5. 입찰 견적(일진그룹)







